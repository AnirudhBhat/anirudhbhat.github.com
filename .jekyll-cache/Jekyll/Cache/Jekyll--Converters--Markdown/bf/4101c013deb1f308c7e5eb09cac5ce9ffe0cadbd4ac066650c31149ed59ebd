I"v
<p>I'm very happy to express my interest in joining your team as an Android Engineer!</p>

<p>I've been following Automattic since long time and have read your blogs and watched Matt wullenberg's interviews. Every time i read one of your blogs or use your product my interest to join Automattic has only been increasing</p>

<p>I will give you 3 reasons for hiring me, and i will list the projects that i have worked on</p>

<p><em>First</em>, I can write clean code that solves complex problems. I always believe that design patterns, SOLID principles and architecture are far more important than the technology or the language we use to solve the problem. I like to keep things as boring and simple as possible. Technology is a means and not an end.</p>

<p><em>Second</em>, I write tests and an extensive believer in writing good unit tests. In my opinion any software which does not have tests are legacy software</p>

<p><em>Third</em>, I am a team player. I always try to give positive feedback during code reviews and does not nitpick on small things which really aren’t important on the higher level. I love to work with people who show empathy and kindness. I have been in a situation where i understand being calm and showing kindness goes a long way.</p>

<p>and why Automattic? All these years most of my work has been closed source except for my side projects which are available on Github. I really amire that all of the Automattic’s android apps are open source and i also
love the company’s open source first approach. I also love the way the company is run, the philosophy behind it and the hiring ethics.</p>

<h2 id="sample-projects">Sample projects</h2>
<p>Noon academy (https://play.google.com/store/apps/details?id=com.noonEdu.k12App&amp;hl=en_IN)
	When: Nov 2019 - Present 
	Role: Senior android engineer
	Contributions: 
		1. Introduced team to writing Unit tests. Gave internal talks about testing.
		2. Wrote custom lint checks to get a consistent design throughout the app
		3. Gave internal talk on MVI architecture and its benefits with respect to testing
		3. Was part of 3 major feature module from scratch and 1 major rewrite</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>frameworks/Architecture
	MVVM for some of the module and MVI for few others
	Retrofit for networking
	LiveData for reactive stuff
	Dagger2 for DI
	java/kotlin

Learnings: 
	1. It’s impossible to scale an app without proper design system in place.
	2. Rewriting an old feature with zero unit tests and get the requirement’s right is quite hard. Knew this beforehand but experienced it first hand
</code></pre></div></div>

:ET